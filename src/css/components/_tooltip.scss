@use "sass:math";

$tippyColor: #000;
$tippyArrowSize: 1.2rem;

[data-tippy] {
	cursor: help;
}

.tippy-box[data-animation='fade'][data-state='hidden'] {
	opacity: 0;
}

[data-tippy-root] {
	max-width: calc(100vw - 1rem);
}

.tippy-box {
	position: relative;
	background-color: $tippyColor;
	color: #fff;
	border-radius: .4rem;
	font-size: 1.2rem;
	outline: 0;
	transition-property: transform, visibility, opacity;

	&[data-placement^='top'] {
		& > .tippy-arrow {
			bottom: 0;

			&::before {
				bottom: math.div(-$tippyArrowSize, 2);
				left: 0;
				border-width: math.div($tippyArrowSize, 2) math.div($tippyArrowSize, 2) 0;
				border-top-color: initial;
				transform-origin: center top;
			}
		}
	}

	&[data-placement^='bottom'] {
		& > .tippy-arrow {
			top: 0;

			&::before {
				top: math.div(-$tippyArrowSize, 2);
				left: 0;
				border-width: 0 math.div($tippyArrowSize, 2) math.div($tippyArrowSize, 2);
				border-bottom-color: initial;
				transform-origin: center bottom;
			}
		}
	}

	&[data-placement^='left'] {
		& > .tippy-arrow {
			right: 0;

			&::before {
				border-width: math.div($tippyArrowSize, 2) 0 math.div($tippyArrowSize, 2) math.div($tippyArrowSize, 2);
				border-left-color: initial;
				right: math.div(-$tippyArrowSize, 2);
				transform-origin: center left;
			}
		}
	}

	&[data-placement^='right'] {
		& > .tippy-arrow {
			left: 0;

			&::before {
				left: math.div(-$tippyArrowSize, 2);
				border-width: math.div($tippyArrowSize, 2) math.div($tippyArrowSize, 2) math.div($tippyArrowSize, 2) 0;
				border-right-color: initial;
				transform-origin: center right;
			}
		}
	}

	&[data-inertia][data-state='visible'] {
		transition-timing-function: cubic-bezier(0.54, 1.5, 0.38, 1.11);
	}
}

.tippy-arrow {
	width: $tippyArrowSize;
	height: $tippyArrowSize;
	color: $tippyColor;

	&::before {
		content: '';
		position: absolute;
		border-color: transparent;
		border-style: solid;
	}
}

.tippy-content {
	position: relative;
	padding: .5rem 1rem;
	z-index: 1;
}
